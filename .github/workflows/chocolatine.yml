name: Chocolatine CI/CD

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

jobs:
  check_coding_style:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up directories
        run: |
          DELIVERY_DIR='.'
          REPORTS_DIR='.'
          EXPORT_FILE="$REPORTS_DIR/coding-style-reports.log"

          # Remove existing report file
          rm -f "$EXPORT_FILE"

          # Pull the Docker image
          echo "Pulling Docker image..."
          docker pull ghcr.io/epitech/coding-style-checker:latest

          # Run the Docker container to generate reports
          echo "Running Docker container..."
          docker run --rm --security-opt "label:disable" -i -v "$DELIVERY_DIR:/mnt/delivery" -v "$REPORTS_DIR:/mnt/reports" ghcr.io/epitech/coding-style-checker:latest "/mnt/delivery" "/mnt/reports"

          # Check for coding style errors
          if [[ -f "$EXPORT_FILE" ]]; then
            echo "$(wc -l < "$EXPORT_FILE") coding style error(s) reported in $EXPORT_FILE, $(grep -c ": MAJOR:" "$EXPORT_FILE") major, $(grep -c ": MINOR:" "$EXPORT_FILE") minor, $(grep -c ": INFO:" "$EXPORT_FILE") info"
            if [[ $(wc -l < "$EXPORT_FILE") -gt 0 ]]; then
              echo "Coding style errors found."
              cat "$EXPORT_FILE"
              exit 1
            else
              echo "No coding style errors found."
            fi
          else
            echo "No export file found."
          fi

  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    needs: check_coding_style
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run make
        run: make
        timeout-minutes: 2
      - name: Clean project
        run: make clean
      - name: Verify executables
        run: |
          for exe in $(echo "${{ env.EXECUTABLES }}" | tr ',' '\n'); do
            if [ ! -x "$exe" ]; then
              echo "::error file=$exe::Executable missing or not executable"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    name: Push to Mirror
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            github.com/EpitechPGEPromo2029/B-DOP-200-BAR-2-1-chocolatine-ana.pallares-rodriguez
          ssh_private_key:
            ${{ secrets.SSH_KEY }}
